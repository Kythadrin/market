services:
  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin}
      POSTGRES_DB: ${POSTGRES_DB:-app}
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-admin}" ]
      timeout: 5s
      retries: 5
      start_period: 60s
    ports:
      - ${POSTGRES_BACKEND_PORT:-54322}:5432
    volumes:
      - ./Backend/docker/db/data:/var/lib/postgresql/data:rw
    networks:
      - app-network

  php:
    image: php:8.3-fpm
    build:
      dockerfile: ./Backend/docker/php/Dockerfile
    ports:
      - ${VITE_PORT:-5174}:${VITE_PORT:-5174}
    volumes:
      - ./Backend:/var/www/market
    depends_on:
      - postgres
    networks:
      - app-network

  nginx:
    image: nginx:latest
    build:
      dockerfile: ./Backend/docker/nginx/Dockerfile
    ports:
      - ${NGINX_SERVER_HOST_HTTP_PORT:-8080}:80
    volumes:
      - ./Backend/docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      #      - ./docker/nginx/ssl:/etc/ssl
      - ./Backend:/var/www/market
    depends_on:
      - postgres
      - php
    networks:
      - app-network

  blockchain:
    build:
      dockerfile: ./Blockchain/docker/Dockerfile
    ports:
      - 3000:3000
    volumes:
      - ./Blockchain:/var/www/blockchain
    networks:
      - app-network
    depends_on:
      - postgres
      - php

networks:
  app-network:
    driver: bridge
